pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials ('ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials ('SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "ap-south-1"
    }

    stages {
        stage('Checkout-SCM') {
            steps {
                script{
                   checkout scmGit(branches: [[name: '*/feature-branch-2']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/kvmuralikrishna9/DevOps_Practise.git']])
                }
            }
        }

        stage('Initializing Terraform'){
            steps {
                script{
                    dir('terraform/7_EKS_deploy-from-Jenkins/c_eks_from_jenkins'){
                        sh 'terraform init'
                    }   
                }
            }
        }

        stage('Formatting & Validating  Terraform code'){
            steps {
                script{
                    dir('terraform/7_EKS_deploy-from-Jenkins/c_eks_from_jenkins') {
                        sh 'terraform fmt'
                        sh 'terraform validate'
                    }   
                }
            }
        }

        stage('Previewing the Infra using terraform') {
            steps {
                script{
                    dir('terraform/7_EKS_deploy-from-Jenkins/c_eks_from_jenkins') {
                        sh 'terraform plan -out=c_eks_from_jenkins.tfplan'
                    }  
                    //input(message: "Are you sure to proceed?", ok: "proceed")
                }
            }
        }

        stage('Creating/Destroying EKS cluster'){
            steps {
                script{
                    dir('terraform/7_EKS_deploy-from-Jenkins/c_eks_from_jenkins') {
                        sh 'terraform $action --auto-approve'    //parameterized
                    }  
                }
            }
        }

        stage('Destroying S3 & DynamoDB'){
            steps {
                script{
                    dir('terraform/7_EKS_deploy-from-Jenkins/a_s3_dynamo-db'){
                        sh 'aws s3 rm s3://eks-tf-s3-eks-jenkins-devenv/platform --recursive'
                        sh 'terraform $action --auto-approve'    //parameterized
                    }   
                }
            }
        }

        /*stage('Deploying the Nginx Application'){
            steps {
                script{
                    dir('c_eks_from_jenkins/ConfigurationFiles') {
                        sh 'aws eks update-kubeconfig --name eks-tf_cluster --region ap-south-1'
                        sh 'kubectl apply -f deployment.yaml'
                        sh 'kubectl apply -f service.yaml'
                    }  
                }
            } 
        }*/
    }
}

